apply plugin: 'com.android.library'

android {
    compileSdkVersion 27
    defaultConfig {
        versionCode Integer.parseInt(project.VERSION_CODE)
        minSdkVersion 14
        targetSdkVersion 27
        versionName project.VERSION_NAME
    }
    signingConfigs {
        config {
            keyAlias 'BuildmLearn'
            keyPassword 'buildmlearn'
            storeFile file('debugKey.jks')
            storePassword 'buildmlearn'
        }
    }
    def URL_SCHEME_HTTP = '"http"'
    def URL_SCHEME_HTTPS = '"https"'
    def DACDN_URL = '"dacdn.visualwebsiteoptimizer.com"'
    def SOCKET_URL = '"https://mobilepreview.vwo.com:443/"'
    buildTypes {
        release {
            signingConfig signingConfigs.config
            it.buildConfigField 'String', 'SCHEME', URL_SCHEME_HTTPS
            it.buildConfigField 'Boolean', 'ENABLE_SOCKET_LOGS', "false"

            postprocessing {
                removeUnusedCode true
                removeUnusedResources false
                obfuscate true
                optimizeCode true
                proguardFile 'proguard-rules.pro'
            }
        }
        debug {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
            it.buildConfigField 'String', 'SCHEME', URL_SCHEME_HTTP
            it.buildConfigField 'Boolean', 'ENABLE_SOCKET_LOGS', "false"
        }
    }
    lintOptions {
        disable 'InvalidPackage'
        abortOnError false
    }
    buildTypes.each {
        it.buildConfigField 'String', 'DACDN_URL', DACDN_URL
        it.buildConfigField 'String', 'SOCKET_URL', SOCKET_URL
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
            all {
                testLogging {
                    events "failed", "skipped", "passed"
                    showStackTraces = true
                    exceptionFormat = "full"
                }
                maxParallelForks = 8
                forkEvery = 20
            }
        }
    }
}

dependencies {
    // Required -- JUnit 4 framework
    testImplementation 'junit:junit:4.12'
    // Optional -- Mockito framework
    testImplementation 'org.mockito:mockito-core:2.19.0'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.0-beta.5'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.0-beta.5'
    testImplementation 'org.powermock:powermock-module-junit4-rule:2.0.0-beta.5'
    testImplementation 'org.powermock:powermock-classloading-xstream:2.0.0-beta.5'
    testImplementation 'org.robolectric:robolectric:4.0-alpha-3'
    testImplementation 'com.squareup.okhttp3:mockwebserver:3.11.0'
    implementation('io.socket:socket.io-client:1.0.0') {
        exclude group: 'org.json', module: 'json'
    }
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'
    implementation 'com.android.support:support-annotations:27.1.1'
    implementation 'com.android.support:support-core-utils:27.1.1'
}

apply from: '../gradle-mvn-push.gradle'